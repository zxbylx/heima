#include <iostream>
using namespace std;
// 数组特点：放在一块连续的内存空间中，数组中每个元素都是相同的数据类型
int main() {
    // 二维数组
    /*
        二维数组定义方式
        1. 数据类型 数组名[行数][列数];
        2. 数据类型 数组名[行数][列数] = {{数据1， 数据2}, {数据3， 数据4}};
        3. 数据类型 数组名[行数][列数] = {数据1，数据2， 数据3， 数据4};
        4. 数据类型 数组名[][列数] = {数据1， 数据2， 数据3， 数据4};
    */
    // 1. 数据类型 数组名[行数][列数];
    int arr[2][3];
    arr[0][0] = 1;
    arr[0][1] = 2;
    arr[0][2] = 3;
    arr[1][0] = 4;
    arr[1][1] = 5;
    arr[1][2] = 6;
    cout << "arr1的结果" << endl;
    for (int i=0; i<2; i++)
    {
        for (int j=0; j<3; j++)
        {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }

    // 2. 数据类型 数组名[行数][列数] = {{数据1， 数据2}, {数据3， 数据4}};
    int arr2[2][3] = 
    {
        {1, 2, 3},
        {4, 5, 6}
    };
    cout << "arr2的结果" << endl;
    for (int i=0; i<2; i++)
    {
        for (int j=0; j<3; j++)
        {
            cout << arr2[i][j] << " ";
        }
        cout << endl;
    }

    // 3. 数据类型 数组名[行数][列数] = {数据1，数据2， 数据3， 数据4};
    cout << "arr3的结果" << endl;
    int arr3[2][3] = {1, 2, 3, 4, 5, 6};
    for (int i=0; i<2; i++)
    {
        for (int j=0; j<3; j++)
        {
            cout << arr3[i][j] << " ";
        }
        cout << endl;
    }

    // 4. 数据类型 数组名[][列数] = {数据1， 数据2， 数据3， 数据4};
    int arr4[][3] = {1, 2, 3, 4, 5, 6};
    cout << "arr4的结果" << endl;
    for (int i=0; i<2; i++)
    {
        for (int j=0; j<3; j++)
        {
            cout << arr4[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}